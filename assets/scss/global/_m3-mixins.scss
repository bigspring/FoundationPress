// ---------------------------
// RESPONSIVE VERTICAL PADDING
// ---------------------------

/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), 
///                 minumum of 35px and maximum of 150px
///  @include responsive-vertical-padding(5vw, 35px, 150px, 50px);

	@mixin responsive-vertical-padding($responsive, $min, $max: false, $fallback: false) {
	  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
	  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
	  $min-breakpoint: $min / $responsive-unitless * 100;
	  
	  @media (max-#{$dimension}: #{$min-breakpoint}) {
	    padding: $min 0;
	  }
	  
	  @if $max {
	    $max-breakpoint: $max / $responsive-unitless * 100;
	    
	    @media (min-#{$dimension}: #{$max-breakpoint}) {
	      padding: $max 0;
	    }
	  }
	  
	  @if $fallback {
	    padding: $fallback 0;
	  }
	  
	  padding: $responsive 0;
	}

// ---------------------------
// RESPONSIVE PADDING
// ---------------------------

/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), 
///                 minumum of 35px and maximum of 150px
///  @include responsive-padding(5vw, 35px, 150px, 50px);

	@mixin responsive-padding($responsive, $min, $max: false, $fallback: false) {
	  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
	  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
	  $min-breakpoint: $min / $responsive-unitless * 100;
	  
	  @media (max-#{$dimension}: #{$min-breakpoint}) {
	    padding: $min;
	  }
	  
	  @if $max {
	    $max-breakpoint: $max / $responsive-unitless * 100;
	    
	    @media (min-#{$dimension}: #{$max-breakpoint}) {
	      padding: $max;
	    }
	  }
	  
	  @if $fallback {
	    padding: $fallback;
	  }
	  
	  padding: $responsive;
	}

// ---------------------------
// RESPONSIVE VERTICAL MARGIN
// ---------------------------

/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), 
///                 minumum of 35px and maximum of 150px
///  @include responsive-vertical-margin(5vw, 35px, 150px, 50px);

	@mixin responsive-vertical-margin($responsive, $min, $max: false, $fallback: false) {
	  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
	  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
	  $min-breakpoint: $min / $responsive-unitless * 100;
	  
	  @media (max-#{$dimension}: #{$min-breakpoint}) {
	    margin: $min auto;
	  }
	  
	  @if $max {
	    $max-breakpoint: $max / $responsive-unitless * 100;
	    
	    @media (min-#{$dimension}: #{$max-breakpoint}) {
	      margin: $max auto;
	    }
	  }
	  
	  @if $fallback {
	    margin: $fallback auto;
	  }
	  
	  margin: $responsive auto;
	}


// ---------------------------
// RESPONSIVE FONT SIZES
// ---------------------------

/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), 
///                 minumum of 35px and maximum of 150px
///  @include responsive-font(5vw, 35px, 150px, 50px);

	@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
	  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
	  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
	  $min-breakpoint: $min / $responsive-unitless * 100;
	  
	  @media (max-#{$dimension}: #{$min-breakpoint}) {
	    font-size: $min;
	  }
	  
	  @if $max {
	    $max-breakpoint: $max / $responsive-unitless * 100;
	    
	    @media (min-#{$dimension}: #{$max-breakpoint}) {
	      font-size: $max;
	    }
	  }
	  
	  @if $fallback {
	    font-size: $fallback;
	  }
	  
	  font-size: $responsive;
	}
